<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExportarToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIQAhAPYAAPP483S2bFmkVFheQgNoA9Xl1ejx6Hu7cmV1UFmCVl9qSpW3itjn2DhOICg0EpzH
        lDJEGY2qgdvq3H2Xa0aHLNrp2oagdeDu4CxBJcrlxB4nDNLk0mSqW2OZYG6wZ7LWqjZzEfr9+u317ZLH
        iN/s36fQnT9+IfX59cDeumaOVF6jRObw5iY6IOny6s3azfX69kaTP97r3hgeCWisY+Tv5EyWSoXBe4Cq
        cNno2fj6+FmePnWyYvb69lSXOOvz61yARlZ6QHuma3GbXmGHTE6MNNLpzHagZfr7+YO6clObSIWvdf7/
        /jt5Gf3+/fH38fv++1BeOUFlK+/276jCqGqWVzlrGzSHMR13HClMGRRfDpC8gTJrDktyOS9sCePr412a
        VuPu4v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAIQAhAAAH/4BhgoOEhYaHiImK
        i4NKjjeQQZJGlEKWVCmZQ5s/nUCfhUpFoxmlKKcfqSUlDw8jWjZISDu0HBwNoUURC7y9CxHAwBbDxBPG
        xiq4hDdFC4NLTU8hIUc5PC8nAABOUiIiPi0GCMmFNxnOYdDS1NbY2tze4Abi5Mvn6dHT1dfZ293f4Qys
        GKdsUJBzSwIE8DBjRocOXvq5eNghRYKLK2gg0FFQUBAUC5oEyFBihEkkHRgAmBjgwIEAAhIQoAFmI4RC
        Hxc8eeCB5AgbNg50mNKh5cuYBFyAqanjJiEjKCJMe8Ahw8+gHhJ4cAlTplIwFxD0cDrIyAep1R4IyPCA
        6wytXf+TLr1AQixZQULO7nvxIAmKBwtncEjwxetcEjEUjC2UN0K7bA9qoBjRkAPSr3RjSFBA5G4YISUi
        8NNW4QqMDzZsCRDAZQpYxBI2E3FQiEpodwAq1BBA4PSB1asJcElgUUIFBRRoE6LywEI/3Qt5wygBU0CS
        JAQomMhSAQdy5YNSNCddw+gM6SU8XIdBhACWKTgYfC+UYoSF3OW5erDcmzp7ChQQ8AADDAxgAniCpKCF
        BU7UAAIIVVQRRRRQVEjAFSMEAKAJJhDAQAEGIhjGEDZYIEUNGKSooopYZGGFFRBOCAULIJqgQSFDIDFB
        PAFldNgHHWDAwpBEgsjEjYTkuKOSPALR9JpmxsX3YQEFbDDAkYX8sMMETPr4ZGzdEUhllVaCgOQgWk7Q
        o5OZgSnlmBvEOYCZWW45j5dtRikmlXHKCYIMhQDBwQQIFGooAgokqqgCAzTqqKNbAEqIoCpUqoIOmPag
        KRFEAKgdh0ww8SAIW3Qh6SBANKDqqhC06qoDsMaqwayzymDrqYzkquuuvPa6SCAAOw==
</value>
  </data>
</root>